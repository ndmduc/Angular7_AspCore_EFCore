// <auto-generated />
using Angular7CRUDDemo.Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Angular7CRUDDemo.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190622133327_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Angular7CRUDDemo.Backend.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fname");

                    b.Property<string>("Lname");

                    b.Property<string>("email");

                    b.Property<string>("gender");

                    b.HasKey("ID");

                    b.ToTable("tblEmployee");

                    b.HasData(
                        new { ID = 1, Fname = "Mangesh", Lname = "G", email = "Mangesh.g@outlook.com", gender = "1" },
                        new { ID = 2, Fname = "Ramnath", Lname = "Bodke", email = "Ramnagh.g@outlook.com", gender = "1" },
                        new { ID = 3, Fname = "Suraj", Lname = "G", email = "suraj.g@gmail.com", gender = "1" },
                        new { ID = 4, Fname = "Jaffar", Lname = "K", email = "Jaffar.g@outlook.com", gender = "1" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
